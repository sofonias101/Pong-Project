{"version":3,"sources":["src/settings.js","src/partials/Board.js","src/partials/paddle.js","src/partials/ball.js","src/partials/score.js","src/partials/showWinner.js","src/partials/Game.js","src/index.js"],"names":["SVG_NS","GAME_WIDTH","GAME_HEIGHT","PADDLE_WIDTH","PADDLE_HEIGHT","PADDLE_GAP","keys","p1up","p1down","p2up","p2down","pause","Board","width","height","svg","boardSvg","document","createElementNS","setAttributeNS","appendChild","lineSvg","Paddle","boardHeight","x","y","KeyDown","KeyUp","speed","score","addEventListener","event","key","moveUp","moveDown","position","top","left","bottom","right","console","log","Math","max","min","paddleSvg","Ball","radius","boardWidth","direction","ping","Audio","pingSound","reset","vy","random","vx","abs","paddle1","paddle2","increaseScore","getPaddlePosition","hitRight","belowTop","aboveBottom","play","hitLeft","ballSvg","ballMove","wallCollusion","paddleCollusion","Score","size","textSvg","textContent","showWinner","message","white","Game","element","paused","gameElement","getElementById","board","ball","score1","score2","gameWon","paddle1Score","paddle2Score","innerHTML","render","getScore","winningPlayer","gameWin","resetScore","game","gameLoop","requestAnimationFrame"],"mappings":"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","file":"src.33e0c6c0.js","sourceRoot":"..","sourcesContent":["export const SVG_NS = \"http://www.w3.org/2000/svg\";\n\nexport const GAME_WIDTH = 512;\nexport const GAME_HEIGHT = 256;\n\nexport const PADDLE_WIDTH = 8;\nexport const PADDLE_HEIGHT = 56;\nexport const PADDLE_GAP = 10;\n\n\nexport const keys = {\n\n  p1up: 'w',      // player 1 up key\n  p1down: 's',    // player 1 down key\n  p2up: 'o',  // player 2 up key\n  p2down: 'l', // player 2 down key\n  pause: ' ' // we'll use this later...\n}","import { SVG_NS } from \"../settings\";\n\nexport default class Board {\n  constructor(width, height) {\n    this.width = width;\n    this.height = height;\n  }\n  render(svg) {\n    //Board for ...\n    const boardSvg = document.createElementNS(SVG_NS, 'rect');\n    boardSvg.setAttributeNS(null, \"x\", 0);\n    boardSvg.setAttributeNS(null, \"y\", 0);\n    boardSvg.setAttributeNS(null, \"width\", this.width);\n    boardSvg.setAttributeNS(null, \"height\", this.height);\n    boardSvg.setAttributeNS(null, \"fill\", \"orange\");\n    svg.appendChild(boardSvg);\n\n    //line\n    const lineSvg = document.createElementNS(SVG_NS, 'line');\n    lineSvg.setAttributeNS(null, \"x1\", this.width / 2);\n    lineSvg.setAttributeNS(null, \"y1\", 0);\n    lineSvg.setAttributeNS(null, \"x2\", this.width / 2);\n    lineSvg.setAttributeNS(null, \"y2\", this.height);\n    lineSvg.setAttributeNS(null, \"stroke\", \"white\")\n    lineSvg.setAttributeNS(null, \"stroke-dasharray\", \"10\")\n    svg.appendChild(lineSvg)\n\n\n  }\n\n\n}","import { SVG_NS } from \"../settings\";\n\nexport default class Paddle {\n  constructor(boardHeight, width, height, x, y, KeyDown, KeyUp) {\n    this.boardHeight = boardHeight;\n    this.width = width;\n    this.height = height;\n    this.x = x;\n    this.y = y;\n    this.speed = 15;\n    this.score = 0;\n    document.addEventListener(\"keydown\", event => {\n      switch (event.key) {\n        case KeyUp:\n          this.moveUp();\n          break;\n        case KeyDown:\n          this.moveDown()\n          break;\n      }\n    });\n  }\n  resetScore() {\n    this.score = 0;\n  }\n\n\n  getScore() {\n    return this.score;\n  }\n\n  increaseScore() {\n    this.score = this.score + 1;\n  }\n\n\n  getPaddlePosition() {\n    const position = {\n      top: this.y,\n      left: this.x,\n      bottom: this.y + this.height,\n      right: this.x + this.width\n    };\n    return position;\n  }\n  //moves paddle up\n  moveUp() {\n    console.log('up was pressed');\n    this.y = Math.max(0, this.y - this.speed);\n\n  }\n  // moves paddle down\n  moveDown() {\n    console.log('down was pressed');\n    this.y = Math.min(this.boardHeight - this.height, this.y + this.speed);\n\n  }\n\n  //paddles\n  render(svg) {\n    const paddleSvg = document.createElementNS(SVG_NS, 'rect');\n    paddleSvg.setAttributeNS(null, \"x\", this.x);\n    paddleSvg.setAttributeNS(null, \"y\", this.y);\n    paddleSvg.setAttributeNS(null, \"width\", this.width);\n    paddleSvg.setAttributeNS(null, \"height\", this.height);\n    paddleSvg.setAttributeNS(null, \"fill\", \"white\");\n    svg.appendChild(paddleSvg);\n  }\n}","import { SVG_NS } from '../settings'\nimport pingSound from \"../../public/sounds/pong-01.wav\";\n\nexport default class Ball {\n  constructor(radius, boardWidth, boardHeight) {\n    this.radius = radius;\n    this.boardWidth = boardWidth;\n    this.boardHeight = boardHeight;\n    // this.x = this.boardWidth / 2;\n    // this.y = this.boardHeight / 2;\n    this.direction = 1;\n    this.ping = new Audio(pingSound);\n    this.reset();\n\n  }\n\n  reset() {\n    this.x = this.boardWidth / 2;\n    this.y = this.boardHeight / 2;\n    this.vy = 0;\n    while (this.vy === 0) {\n      this.vy = (Math.random() * 10) - 5;\n\n    }\n    this.vx = (6 - Math.abs(this.vy)) * this.direction;\n  }\n\n  wallCollusion(paddle1, paddle2) {\n\n    if ((this.y + this.radius >= this.boardHeight) || (this.y - this.radius <= 0)) {\n      this.vy = this.vy * -1;\n    }\n    if (this.x - this.radius >= this.boardWidth) {\n      paddle1.increaseScore();\n      this.direction = -1;\n      this.reset();\n    } else if (this.x + this.radius <= 0) {\n      paddle2.increaseScore();\n      this.direction = 1;\n      this.reset();\n    }\n\n  }\n  paddleCollusion(paddle1, paddle2) {\n\n    if (this.vx < 0) {\n\n      const position = paddle1.getPaddlePosition();\n      const hitRight = ((this.x + this.radius) <= position.right);\n      const belowTop = ((this.y + this.radius) >= position.top);\n      const aboveBottom = ((this.y - this.radius) <= position.bottom);\n      if (hitRight && belowTop && aboveBottom) {\n        this.ping.play();\n        this.vx = this.vx * -1;\n      }\n    } else {\n      const position = paddle2.getPaddlePosition();\n      const hitLeft = ((this.x - this.radius) >= position.left);\n      const belowTop = ((this.y - this.radius) >= position.top);\n      const aboveBottom = ((this.y + this.radius) <= position.bottom);\n      if (hitLeft && belowTop && aboveBottom) {\n        this.ping.play();\n        this.vx = this.vx * -1;\n      }\n    }\n  }\n\n  ballMove() {\n    this.x = this.x + this.vx;\n    this.y = this.y + this.vy;\n  }\n\n\n\n  render(svg, paddle1, paddle2) {\n\n    const ballSvg = document.createElementNS(SVG_NS, 'circle');\n    ballSvg.setAttributeNS(null, \"cx\", this.x);\n    ballSvg.setAttributeNS(null, \"cy\", this.y);\n    ballSvg.setAttributeNS(null, \"r\", this.radius);\n    ballSvg.setAttributeNS(null, \"fill\", \"white\");\n    svg.appendChild(ballSvg);\n    this.ballMove();\n    this.wallCollusion(paddle1, paddle2);\n    this.paddleCollusion(paddle1, paddle2);\n\n\n  }\n}\n","import { SVG_NS } from '../settings'\nexport default class Score {\n  constructor(x, y, size) {\n    this.x = x;\n    this.y = y;\n    this.size = size;\n  }\n  render(svg, score) {\n    const textSvg = document.createElementNS(SVG_NS, \"text\");\n    textSvg.setAttributeNS(null, \"x\", this.x);\n    textSvg.setAttributeNS(null, \"y\", this.y);\n    textSvg.setAttributeNS(null, \"font-family\", \"'Silkscreen Web', 'monotype'\");\n    textSvg.setAttributeNS(null, \"font-size\", this.size);\n    textSvg.setAttributeNS(null, \"fill\", \"white\");\n    textSvg.setAttributeNS(null, \"stroke-linecap\", \"round\");\n    textSvg.textContent = score;\n    svg.appendChild(textSvg);\n\n\n  }\n}","import { SVG_NS, white } from '../settings';\n\nexport default class showWinner {\n  constructor(x, y, size) {\n    this.x = x;\n    this.y = y;\n    this.size = size;\n  }\n  //...\n  render(svg, message) {\n    const showWinner = document.createElementNS(SVG_NS, 'text');\n    showWinner.setAttributeNS(null, 'x', this.x);\n    showWinner.setAttributeNS(null, 'y', this.y);\n    showWinner.setAttributeNS(null, 'font-size', this.size);\n    showWinner.setAttributeNS(null, 'text-anchor', 'middle');\n    showWinner.setAttributeNS(null, 'fill', white);\n    showWinner.textContent = message;\n    svg.appendChild(showWinner);\n  }\n}\n","import { SVG_NS, PADDLE_HEIGHT, PADDLE_WIDTH, PADDLE_GAP, BALL_RADIUS } from '../settings';\nimport Board from './Board';\nimport Paddle from './paddle';\nimport Ball from './ball';\nimport Score from './score';\nimport showWinner from './showWinner'\n\nexport default class Game {\n  constructor(element, width, height) {\n    this.element = element;\n    this.width = width;\n    this.height = height;\n    this.paused = false;\n    this.gameElement = document.getElementById(this.element);\n    this.board = new Board(this.width, this.height);\n    this.paddle1 = new Paddle(this.height, 10, 56, 10, 100, 's', 'w')\n    this.paddle2 = new Paddle(this.height, 10, 56, 494, 100, 'l', 'o')\n    this.ball = new Ball(8, this.width, this.height)\n    this.score1 = new Score(this.width / 2 - 50, 30, 30);\n    this.score2 = new Score(this.width / 2 + 25, 30, 30);\n    this.gameWon = false;\n    this.showWinner = new showWinner(this.width / 2, this.height / 2, 40);\n\n    // othercode\n    document.addEventListener(\"keydown\", event => {\n      if (event.key === \" \") {\n        this.paused = !this.paused;\n      }\n\n      // Event Listener For goal count and \"winner\"\n\n\n    });\n\n  }\n  gameWin(paddle1Score, paddle2Score) {\n    if (paddle1Score === 5) {\n      console.log('paddle1 won');\n      this.gameWon = true;\n      return 'Paddle1 won';\n    } else if (paddle2Score === 5) {\n      console.log('paddle2 won');\n      this.gameWon = true;\n      return 'Paddle2 won';\n    }\n\n  }\n\n  //(boardHeight, width, height, x, y)\n\n\n\n  render() {\n    // More code goes here....\n    if (this.paused === false) {\n      this.gameElement.innerHTML = '';\n      let svg = document.createElementNS(SVG_NS, \"svg\");\n      svg.setAttributeNS(null, \"width\", this.width);\n      svg.setAttributeNS(null, \"height\", this.height);\n      svg.setAttributeNS(null, \"viewBox\", `0 0 ${this.width} ${this.height}`);\n      this.gameElement.appendChild(svg);\n      //render board\n      this.board.render(svg);\n      this.paddle1.render(svg);\n      this.paddle2.render(svg);\n      this.ball.render(svg, this.paddle1, this.paddle2);\n      this.score1.render(svg, this.paddle1.getScore());\n      this.score2.render(svg, this.paddle2.getScore());\n\n\n      const winningPlayer = this.gameWin(\n        this.paddle1.getScore(),\n        this.paddle2.getScore()\n      );\n      if (this.gameWon === true) {\n        this.showWinner.render(svg, `${winningPlayer}!`);\n        this.paused = true;\n        this.paddle1.resetScore();\n        this.paddle2.resetScore();\n        this.gameWon = false;\n      }\n\n    }\n  }\n}\n","import './styles/game.css';\nimport Game from './partials/Game';\nimport { GAME_WIDTH, GAME_HEIGHT } from './settings';\n\n// create a game instance\nconst game = new Game('game', GAME_WIDTH, GAME_HEIGHT);\n\n(function gameLoop() {\n  game.render();\n  requestAnimationFrame(gameLoop);\n})();\n"]}